{"version":3,"sources":["../../src/graphql/resolvers.js"],"names":["getBaseUrl","req","protocol","get","resolvers","Query","contactsAll","_","pageno","pagesize","context","baseUrl","request","contactOne","_id","searchContact","name","Mutation","insertContact","tel","address","insertContactAndQuery","updateContact","updateContactAndQuery","deleteContact","deleteContactAndQuery","changePhoto","file","changePhotoAndQuery","logExecutions","prefix"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,aAAcC,GAAD,IAASA,IAAIC,QAAJ,GAAe,KAAf,GAAuBD,IAAIE,GAAJ,CAAQ,MAAR,CAAnD;;AAEA,MAAMC,YAAY;AACdC,WAAQ;AACJC,qBAAc,CAACC,CAAD,EAAI,EAAEC,MAAF,EAAUC,QAAV,EAAJ,EAA0BC,OAA1B,KAAsC,qBAAY,EAAEF,MAAF,EAAUC,QAAV,EAAoBE,SAAQX,WAAWU,QAAQE,OAAnB,CAA5B,EAAZ,CADhD;AAEJC,oBAAa,CAACN,CAAD,EAAI,EAAEO,GAAF,EAAJ,EAAaJ,OAAb,KAAyB,oBAAW,EAAEI,GAAF,EAAOH,SAAQX,WAAWU,QAAQE,OAAnB,CAAf,EAAX,CAFlC;AAGJG,uBAAgB,CAACR,CAAD,EAAI,EAAES,IAAF,EAAJ,EAAcN,OAAd,KAA0B,uBAAc,EAAEM,IAAF,EAAQL,SAAQX,WAAWU,QAAQE,OAAnB,CAAhB,EAAd;AAHtC,KADM;AAMdK,cAAW;AACPC,uBAAgB,CAACX,CAAD,EAAI,EAACS,IAAD,EAAOG,GAAP,EAAYC,OAAZ,EAAJ,EAA2BV,OAA3B,KAAuC,uBAAc,EAAEM,IAAF,EAAOG,GAAP,EAAYC,OAAZ,EAAd,CADhD;AAEPC,+BAAwB,CAACd,CAAD,EAAI,EAACS,IAAD,EAAOG,GAAP,EAAYC,OAAZ,EAAJ,EAA2BV,OAA3B,KAAuC,uBAAc,EAAEM,IAAF,EAAOG,GAAP,EAAYC,OAAZ,EAAd,CAFxD;AAGPE,uBAAgB,CAACf,CAAD,EAAI,EAACO,GAAD,EAAME,IAAN,EAAYG,GAAZ,EAAiBC,OAAjB,EAAJ,EAA+BV,OAA/B,KAA2C,uBAAc,EAAEI,GAAF,EAAOE,IAAP,EAAaG,GAAb,EAAkBC,OAAlB,EAAd,CAHpD;AAIPG,+BAAwB,CAAChB,CAAD,EAAI,EAACO,GAAD,EAAME,IAAN,EAAYG,GAAZ,EAAiBC,OAAjB,EAAJ,EAA+BV,OAA/B,KAA2C,uBAAc,EAAEI,GAAF,EAAOE,IAAP,EAAaG,GAAb,EAAkBC,OAAlB,EAAd,CAJ5D;AAKPI,uBAAgB,CAACjB,CAAD,EAAI,EAAEO,GAAF,EAAJ,KAAgB,uBAAc,EAAEA,GAAF,EAAd,CALzB;AAMPW,+BAAwB,CAAClB,CAAD,EAAI,EAAEO,GAAF,EAAJ,KAAgB,uBAAc,EAAEA,GAAF,EAAd,CANjC;AAOPY,qBAAc,CAACnB,CAAD,EAAI,EAAEO,GAAF,EAAOa,IAAP,EAAJ,KAAsB,qBAAYb,GAAZ,EAAiBa,IAAjB,CAP7B;AAQPC,6BAAsB,CAACrB,CAAD,EAAI,EAAEO,GAAF,EAAOa,IAAP,EAAJ,KAAsB,qBAAYb,GAAZ,EAAiBa,IAAjB;AARrC;AANG,CAAlB;;AAkBA,MAAME,gBAAgB,0BAAoB;AACtCC,YAAQ;AAD8B,CAApB,CAAtB;AAGAD,cAAczB,SAAd;;kBAGeA,S","file":"resolvers.js","sourcesContent":["import { changePhoto, contactsAll, contactOne, searchContact, insertContact, updateContact, deleteContact } from '../db';\r\nimport createGraphQLLogger from 'graphql-log';\r\n\r\nconst getBaseUrl = (req) => req.protocol + '://' + req.get('host')\r\n\r\nconst resolvers = {\r\n    Query : {\r\n        contactsAll : (_, { pageno, pagesize }, context) => contactsAll({ pageno, pagesize, baseUrl:getBaseUrl(context.request) }),\r\n        contactOne : (_, { _id }, context) => contactOne({ _id, baseUrl:getBaseUrl(context.request)  }),\r\n        searchContact : (_, { name }, context) => searchContact({ name, baseUrl:getBaseUrl(context.request) })\r\n    },\r\n    Mutation : {\r\n        insertContact : (_, {name, tel, address }, context) => insertContact({ name,tel, address }),\r\n        insertContactAndQuery : (_, {name, tel, address }, context) => insertContact({ name,tel, address }),\r\n        updateContact : (_, {_id, name, tel, address}, context) => updateContact({ _id, name, tel, address }),\r\n        updateContactAndQuery : (_, {_id, name, tel, address}, context) => updateContact({ _id, name, tel, address }),\r\n        deleteContact : (_, { _id }) => deleteContact({ _id }),\r\n        deleteContactAndQuery : (_, { _id }) => deleteContact({ _id }),\r\n        changePhoto : (_, { _id, file }) => changePhoto(_id, file),\r\n        changePhotoAndQuery : (_, { _id, file }) => changePhoto(_id, file),\r\n    }\r\n}\r\n\r\nconst logExecutions = createGraphQLLogger({\r\n    prefix: 'resolvers.',\r\n});\r\nlogExecutions(resolvers);\r\n\r\n\r\nexport default resolvers;"]}
{"version":3,"file":"index.js","names":["_graphqlYoga","require","_nodeHttp","_schema","_resolvers","_interopRequireDefault","_schema2","_testdb","e","__esModule","default","schema","makeExecutableSchema","typeDefs","resolvers","yoga","createYoga","context","request","graphqlEndpoint","graphiql","title","defaultQuery","introspection","multipart","maxFileSize","formatError","error","console","log","cors","server","createServer","req","res","url","statusCode","setHeader","end","startsWith","id","split","doc","Photo","findOne","_id","mimetype","image","port","process","env","PORT","listen"],"sources":["../src/index.js"],"sourcesContent":["import { createYoga } from 'graphql-yoga';\r\nimport { createServer } from 'node:http';\r\nimport { makeExecutableSchema } from '@graphql-tools/schema';\r\nimport resolvers from './graphql/resolvers';\r\nimport typeDefs from './graphql/schema';\r\nimport { Photo } from './db/testdb';\r\n\r\n// Create executable schema\r\nconst schema = makeExecutableSchema({\r\n  typeDefs,\r\n  resolvers\r\n});\r\n\r\n// Create Yoga instance\r\nconst yoga = createYoga({\r\n  schema,\r\n  context: ({ request }) => {\r\n    return { request };\r\n  },\r\n  graphqlEndpoint: '/graphql',\r\n  graphiql: {\r\n    title: 'Contact Service GraphQL API',\r\n    defaultQuery: `query {\r\n  contactsAll(pageno: 1, pagesize: 10) {\r\n    pageno\r\n    pagesize\r\n    totalcount\r\n    contacts {\r\n      _id\r\n      name\r\n      tel\r\n      address\r\n      photo\r\n    }\r\n  }\r\n}`\r\n  },\r\n  introspection: true,\r\n  multipart: {\r\n    maxFileSize: 1024 * 1024 * 4 // 4MB\r\n  },\r\n  formatError: (error) => {\r\n    console.log(error);\r\n    return error;\r\n  },\r\n  cors: true\r\n});\r\n\r\n// Create HTTP server\r\nconst server = createServer(async (req, res) => {\r\n  // Handle root path redirect to GraphQL playground\r\n  if (req.url === '/') {\r\n    res.statusCode = 302;\r\n    res.setHeader('Location', '/graphql');\r\n    res.end();\r\n    return;\r\n  }\r\n\r\n  // Handle photo requests\r\n  if (req.url?.startsWith('/photos/')) {\r\n    const id = req.url.split('/photos/')[1];\r\n    try {\r\n      const doc = await Photo.findOne({ _id: id });\r\n      if (doc) {\r\n        res.setHeader('Content-Type', doc.mimetype);\r\n        res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\r\n        res.setHeader('Expires', '-1');\r\n        res.setHeader('Pragma', 'no-cache');\r\n        res.end(doc.image);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error('Photo fetch error:', error);\r\n    }\r\n    res.statusCode = 404;\r\n    res.end();\r\n    return;\r\n  }\r\n\r\n  // Pass all other requests to GraphQL Yoga\r\n  return yoga(req, res);\r\n});\r\n\r\nconst port = process.env.PORT || 4000;\r\n\r\nserver.listen(port, () => {\r\n  console.log(`GraphQL Server is running!! (port : ${port})`);\r\n  console.log(`GraphQL endpoint: http://localhost:${port}/graphql`);\r\n  console.log(`GraphiQL playground: http://localhost:${port}/graphql`);\r\n  console.log(`Root URL (redirects to /graphql): http://localhost:${port}/`);\r\n});"],"mappings":"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","ignoreList":[]}
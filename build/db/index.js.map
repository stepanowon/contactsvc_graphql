{"version":3,"file":"index.js","names":["_mongodb","require","_testdb","_constant","_interopRequireDefault","_shortid","e","__esModule","default","contactOne","_id","baseUrl","doc","Contact","findById","photo","constant","PHOTO_URL","exports","contactsAll","pageno","pagesize","contacts","find","sort","skip","limit","map","c","name","tel","address","count","countDocuments","totalcount","searchContact","length","Error","RegExp","index","insertContact","ObjectId","toHexString","c1","save","status","message","updateContact","updateOne","ok","n","deleteContact","delDoc","photo_id","substr","Photo","deleteOne","streamToBuffer","stream","Promise","resolve","reject","buffers","on","data","push","Buffer","concat","storeImageToDB","mimetype","shortid","generate","image","changePhoto","upload","startsWith","updatedDoc"],"sources":["../../src/db/index.js"],"sourcesContent":["import { ObjectId } from 'mongodb'\r\nimport { Contact, Photo, mongoose } from './testdb';\r\nimport constant from '../constant';\r\nimport shortid from 'shortid';\r\n\r\nexport const contactOne = async ({ _id, baseUrl }) => {\r\n    if (typeof(_id) !== \"string\" && _id == \"\") _id = \"not passed\";\r\n    let doc = await Contact.findById(_id);\r\n    if (doc) { \r\n        doc.photo = baseUrl + constant.PHOTO_URL + doc.photo;\r\n        return doc; \r\n    }\r\n    return { _id };\r\n}\r\n\r\nexport const contactsAll = async ({ pageno, pagesize, baseUrl }) => {\r\n    if (typeof(pageno) !== \"number\" || pageno < 0) pageno = 0;\r\n    if (typeof(pagesize) !== \"number\") pagesize = 5;\r\n    let contacts;\r\n    if (pageno === 0) {\r\n        pagesize=0;\r\n        contacts = await Contact.find().sort({ _id: -1 });\r\n    } else {\r\n        contacts = await Contact.find().sort({ _id: -1 }).skip((pageno-1)*pagesize).limit(pagesize);\r\n    }\r\n    contacts = contacts.map((c)=> {\r\n        let { _id, name, tel, address, photo } = c;\r\n        return { _id, name, tel, address, photo: baseUrl + constant.PHOTO_URL + photo}\r\n    })\r\n    let count = await Contact.countDocuments();\r\n    return { pageno, pagesize, totalcount:count, contacts };\r\n}\r\n\r\nexport const searchContact = async({ name, baseUrl }) => {\r\n    if (typeof(name) !== \"string\" || name.length < 2) {\r\n        throw new Error(\"두글자 이상의 이름을 입력하세요\");\r\n    }\r\n    let contacts = await Contact.find({ name: new RegExp(name, \"i\")}).sort({name:1});\r\n    contacts = contacts.map((c,index)=> {\r\n        let { _id, name, tel, address, photo } = c;\r\n        return { _id, name, tel, address, photo: baseUrl + constant.PHOTO_URL + photo }\r\n    })\r\n    return contacts;\r\n}\r\n\r\nexport const insertContact = async ({ name, tel, address, photo }) => {\r\n    if (typeof(photo) === \"undefined\" || photo == null) {\r\n        photo = 'noimage';\r\n    }\r\n    let _id = new ObjectId().toHexString();\r\n    let c1 = new Contact({\r\n        _id, name, tel, address, photo\r\n    })\r\n    let doc = await c1.save()\r\n    return { status: \"ok\", message:\"연락처 추가 성공\", _id: doc._id };\r\n} \r\n\r\nexport const updateContact = async ({ _id, name, tel, address }) => {\r\n    if (typeof(_id) === \"undefined\") {\r\n        return { status: \"fail\", message:\"_id 필드는 반드시 전달해야 합니다.\" };\r\n    }\r\n    let doc = await Contact.updateOne({ _id: _id }, { name, tel, address })\r\n    if (doc.ok === 1 && doc.n === 1) {\r\n        return { status:\"ok\", message:\"업데이트 성공\", _id:_id };\r\n    } else {\r\n        return { status:\"fail\", message:\"업데이트 실패\" };\r\n    }\r\n}\r\n\r\nexport const deleteContact = async ({ _id }) => {\r\n    if (typeof(_id) === \"undefined\") {\r\n        return { status: \"fail\", message:\"_id 필드는 반드시 전달해야 합니다.\" };\r\n    }\r\n    let delDoc = await contactOne({ _id, baseUrl: \"\" });\r\n    if (delDoc.photo !== constant.PHOTO_URL + \"noimage\") {\r\n        let photo_id = delDoc.photo.substr(constant.PHOTO_URL.length);\r\n        await Photo.deleteOne({ _id: photo_id });\r\n    }\r\n\r\n    let doc = await Contact.deleteOne({ _id:_id });\r\n    if (doc.ok === 1 && doc.n === 1) {\r\n        return { status:\"ok\", message:\"삭제 성공\", _id:_id };\r\n    } else {\r\n        return { status:\"fail\", message:\"삭제 실패\" };\r\n    }\r\n}\r\n\r\nconst streamToBuffer = async (stream) => {  \r\n    return new Promise((resolve, reject) => {\r\n        let buffers = [];\r\n        stream.on('error', reject);\r\n        stream.on('data', (data) => buffers.push(data));\r\n        stream.on('end', () => resolve(Buffer.concat(buffers)));\r\n    });\r\n}  \r\n\r\nconst storeImageToDB = async ({stream, mimetype}) => {\r\n    let photo = new Photo();\r\n    photo._id = shortid.generate();\r\n    photo.image = await streamToBuffer(stream);\r\n    photo.mimetype = mimetype;\r\n    await photo.save();\r\n    return photo._id;\r\n}\r\n\r\nexport const changePhoto = async (_id, upload)=> {\r\n    const { stream, mimetype } = await upload;\r\n    if (!mimetype.startsWith(\"image/\")) {\r\n        return { status:\"fail\", message:\"이미지만 업로드 가능합니다.\" };\r\n    }\r\n    //기존 이미지 삭제(noimage가 아닐 경우만)\r\n    let doc = await contactOne({ _id, baseUrl: \"\" });\r\n    if (doc.photo !== constant.PHOTO_URL + \"noimage\") {\r\n        let photo_id = doc.photo.substr(constant.PHOTO_URL.length);\r\n        await Photo.deleteOne({ _id: photo_id });\r\n    }\r\n\r\n    const photo_id = await storeImageToDB({ stream, mimetype })\r\n\r\n    let updatedDoc = await Contact.updateOne({ _id: _id }, { photo: photo_id })\r\n    if (updatedDoc.ok === 1 && updatedDoc.n === 1) {\r\n        return { status:\"ok\", message: `사진 변경 성공 => photo_id : ${photo_id})`, _id:_id };\r\n    } else {\r\n        return { status:\"fail\", message:\"사진 변경 실패\" };\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]}